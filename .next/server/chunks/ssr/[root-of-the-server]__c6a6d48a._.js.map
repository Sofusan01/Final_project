{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///D:/Dashboard/dashboard/src/lib/firebase.ts"],"sourcesContent":["// /lib/firebase.ts\r\nimport { initializeApp, getApps } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDRn8HHi_a4SAgFDAOvm0-ks_IGVfhCEZ0\",\r\n  authDomain: \"dashboard-4de68.firebaseapp.com\",\r\n  databaseURL: \"https://dashboard-4de68-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"dashboard-4de68\",\r\n  storageBucket: \"dashboard-4de68.firebasestorage.app\",\r\n  messagingSenderId: \"759947044425\",\r\n  appId: \"1:759947044425:web:6db0a728a2b831d26f8198\",\r\n  measurementId: \"G-RRNL8VHNL4\"\r\n};\r\n\r\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApps()[0];\r\nexport const db = getDatabase(app);\r\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;AACnB;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,aAAa;IACb,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AACrE,MAAM,KAAK,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///D:/Dashboard/dashboard/src/components/RelayConsole.tsx"],"sourcesContent":["// /src/components/RelayConsole.tsx\r\n\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ref, onValue, set, update } from \"firebase/database\";\r\nimport { db } from \"@/lib/firebase\";\r\nimport {\r\n  Lightbulb, Fan, Droplets, FlaskConical,\r\n  Settings, Power, CheckCircle,\r\n  AlertCircle, Loader2, Timer, Activity,\r\n  Clock, Plus, Minus, RotateCcw\r\n} from \"lucide-react\";\r\n\r\ntype RelayKey = \"light\" | \"fan\" | \"pump\" | \"fertA\" | \"fertB\";\r\ntype RelayStatus = Record<RelayKey, boolean>;\r\ntype RelayTime = {\r\n  [key in RelayKey]?: {\r\n    [period: string]: { start: string; end: string }\r\n  }\r\n};\r\n\r\ninterface DeviceConfig {\r\n  key: RelayKey;\r\n  name: string;\r\n  periods: number;\r\n  icon: React.ComponentType<{ className?: string }>;\r\n  color: string;\r\n  bgColor: string;\r\n  description: string;\r\n  presets?: { name: string; periods: { start: string; end: string }[] }[];\r\n}\r\n\r\nconst DEVICES: DeviceConfig[] = [\r\n  {\r\n    key: \"light\", name: \"Light System\", periods: 2, icon: Lightbulb,\r\n    color: \"text-yellow-600\", bgColor: \"bg-yellow-50\", description: \"LED grow lights\",\r\n    presets: [\r\n      { name: \"Morning & Evening\", periods: [{ start: \"06:00\", end: \"12:00\" }, { start: \"18:00\", end: \"22:00\" }] },\r\n      { name: \"Full Day\", periods: [{ start: \"06:00\", end: \"18:00\" }, { start: \"\", end: \"\" }] },\r\n      { name: \"Night Only\", periods: [{ start: \"20:00\", end: \"23:59\" }, { start: \"00:00\", end: \"06:00\" }] }\r\n    ]\r\n  },\r\n  {\r\n    key: \"fan\", name: \"Ventilation Fan\", periods: 2, icon: Fan,\r\n    color: \"text-blue-600\", bgColor: \"bg-blue-50\", description: \"Air circulation\",\r\n    presets: [\r\n      { name: \"Day & Night\", periods: [{ start: \"08:00\", end: \"20:00\" }, { start: \"22:00\", end: \"06:00\" }] },\r\n      { name: \"Hot Hours\", periods: [{ start: \"10:00\", end: \"16:00\" }, { start: \"19:00\", end: \"21:00\" }] },\r\n      { name: \"Continuous\", periods: [{ start: \"00:00\", end: \"23:59\" }, { start: \"\", end: \"\" }] }\r\n    ]\r\n  },\r\n  {\r\n    key: \"pump\", name: \"Water Pump\", periods: 1, icon: Droplets,\r\n    color: \"text-cyan-600\", bgColor: \"bg-cyan-50\", description: \"Nutrient circulation\",\r\n    presets: [\r\n      { name: \"Every 4 Hours\", periods: [{ start: \"06:00\", end: \"06:15\" }] },\r\n      { name: \"Morning Only\", periods: [{ start: \"07:00\", end: \"07:30\" }] },\r\n      { name: \"Twice Daily\", periods: [{ start: \"08:00\", end: \"08:15\" }] }\r\n    ]\r\n  },\r\n  {\r\n    key: \"fertA\", name: \"Fertilizer A\", periods: 0, icon: FlaskConical,\r\n    color: \"text-green-600\", bgColor: \"bg-green-50\", description: \"Primary nutrients\"\r\n  },\r\n  {\r\n    key: \"fertB\", name: \"Fertilizer B\", periods: 0, icon: FlaskConical,\r\n    color: \"text-purple-600\", bgColor: \"bg-purple-50\", description: \"Secondary nutrients\"\r\n  },\r\n];\r\n\r\n// Quick time presets\r\nconst QUICK_TIMES = [\r\n  { label: \"6 AM\", value: \"06:00\" },\r\n  { label: \"8 AM\", value: \"08:00\" },\r\n  { label: \"12 PM\", value: \"12:00\" },\r\n  { label: \"6 PM\", value: \"18:00\" },\r\n  { label: \"8 PM\", value: \"20:00\" },\r\n  { label: \"10 PM\", value: \"22:00\" }\r\n];\r\n\r\nexport default function RelayConsole({\r\n  floor = \"floor1\",\r\n  className = \"\",\r\n}: { floor?: string; className?: string }) {\r\n  const [relayMode, setRelayMode] = useState<\"auto\" | \"manual\">(\"manual\");\r\n  const [relayStatus, setRelayStatus] = useState<RelayStatus>({\r\n    light: false, fan: false, pump: false, fertA: false, fertB: false\r\n  });\r\n  const [relayTime, setRelayTime] = useState<RelayTime>({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [expandedDevice, setExpandedDevice] = useState<RelayKey | null>(null);\r\n\r\n  // โหลดค่าเริ่มต้น\r\n  useEffect(() => {\r\n    const unsub1 = onValue(ref(db, `${floor}/relay_mode`), (snap) => {\r\n      setRelayMode(snap.val() ?? \"manual\");\r\n    });\r\n    const unsub2 = onValue(ref(db, `${floor}/relay_status`), (snap) => {\r\n      setRelayStatus(snap.val() ?? { light: false, fan: false, pump: false, fertA: false, fertB: false });\r\n    });\r\n    const unsub3 = onValue(ref(db, `${floor}/relay_time`), (snap) => {\r\n      setRelayTime(snap.val() ?? {});\r\n      setLoading(false);\r\n    });\r\n    return () => {\r\n      unsub1();\r\n      unsub2();\r\n      unsub3();\r\n    };\r\n  }, [floor]);\r\n\r\n  // Manual Toggle\r\n  const toggleRelay = async (key: RelayKey) => {\r\n    if (relayMode !== \"manual\") return;\r\n\r\n    try {\r\n      const newValue = !relayStatus[key];\r\n      setRelayStatus(prev => ({ ...prev, [key]: newValue }));\r\n      await update(ref(db, `${floor}/relay_status`), { [key]: newValue });\r\n    } catch (error) {\r\n      console.error('Toggle failed:', error);\r\n      const revertValue = relayStatus[key];\r\n      setRelayStatus(prev => ({ ...prev, [key]: revertValue }));\r\n    }\r\n  };\r\n\r\n  // เปลี่ยนโหมด\r\n  const handleModeChange = async (mode: \"auto\" | \"manual\") => {\r\n    setRelayMode(mode);\r\n    await set(ref(db, `${floor}/relay_mode`), mode);\r\n    if (mode === \"manual\") {\r\n      await set(ref(db, `${floor}/relay_status`), {\r\n        light: false, fan: false, pump: false, fertA: false, fertB: false\r\n      });\r\n    }\r\n  };\r\n\r\n  // อัปเดตช่วงเวลา - ปรับปรุงให้ง่ายขึ้น\r\n  const setPeriod = async (\r\n    key: RelayKey,\r\n    period: string,\r\n    field: \"start\" | \"end\",\r\n    value: string\r\n  ) => {\r\n    await update(ref(db, `${floor}/relay_time/${key}/${period}`), { [field]: value });\r\n  };\r\n\r\n  // ใช้ preset\r\n  const applyPreset = async (key: RelayKey, preset: { name: string; periods: { start: string; end: string }[] }) => {\r\n    const newTimeData: Record<string, { start: string; end: string }> = {};\r\n\r\n    preset.periods.forEach((period, index) => {\r\n      if (period.start || period.end) {\r\n        newTimeData[`period${index + 1}`] = period;\r\n      }\r\n    });\r\n    await set(ref(db, `${floor}/relay_time/${key}`), newTimeData);\r\n  };\r\n\r\n  // เพิ่ม/ลด เวลา 30 นาที\r\n  const adjustTime = (timeStr: string, minutes: number): string => {\r\n    if (!timeStr) return \"\";\r\n    const [hours, mins] = timeStr.split(':').map(Number);\r\n    const totalMinutes = hours * 60 + mins + minutes;\r\n    const newHours = Math.floor(totalMinutes / 60) % 24;\r\n    const newMins = totalMinutes % 60;\r\n    return `${String(newHours).padStart(2, '0')}:${String(newMins).padStart(2, '0')}`;\r\n  };\r\n\r\n  // ล้างเวลาทั้งหมด\r\n  const clearAllTimes = async (key: RelayKey) => {\r\n    await set(ref(db, `${floor}/relay_time/${key}`), {});\r\n  };\r\n\r\n  const activeDevicesCount = Object.values(relayStatus).filter(Boolean).length;\r\n\r\n  return (\r\n    <div className={`w-full bg-white dark:bg-slate-900 rounded-2xl shadow-lg border border-gray-100 dark:border-slate-700 overflow-hidden ${className}`}>\r\n      {/* Header */}\r\n      <div className=\"bg-gradient-to-r from-slate-800 to-slate-900 dark:from-slate-900 dark:to-black p-4 text-white\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Settings className=\"w-5 h-5\" />\r\n            <div>\r\n              <h2 className=\"text-lg font-bold\">Control Console</h2>\r\n              <p className=\"text-slate-300 text-xs\">{floor.toUpperCase()}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center gap-1 text-slate-300\">\r\n            <Activity className=\"w-4 h-4\" />\r\n            <span className=\"text-sm\">{activeDevicesCount}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mode Selection */}\r\n      <div className=\"p-4 border-b border-gray-200 dark:border-slate-600\">\r\n        <div className=\"grid grid-cols-2 gap-2\">\r\n          <button\r\n            onClick={() => handleModeChange(\"manual\")}\r\n            className={`p-3 rounded-lg text-sm font-medium transition-all duration-200 ${relayMode === \"manual\"\r\n              ? \"bg-blue-500 text-white\"\r\n              : \"bg-gray-100 dark:bg-slate-700 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-slate-600\"\r\n              }`}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <Power className=\"w-4 h-4\" />\r\n              <span>Manual</span>\r\n            </div>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => handleModeChange(\"auto\")}\r\n            className={`p-3 rounded-lg text-sm font-medium transition-all duration-200 ${relayMode === \"auto\"\r\n              ? \"bg-green-500 text-white\"\r\n              : \"bg-gray-100 dark:bg-slate-700 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-slate-600\"\r\n              }`}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <Timer className=\"w-4 h-4\" />\r\n              <span>Auto</span>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Status Info */}\r\n      <div className=\"px-4 py-2 bg-gray-50 dark:bg-slate-800\">\r\n        <div className=\"flex items-center gap-2 text-sm\">\r\n          <div className={`w-2 h-2 rounded-full ${relayMode === \"auto\" ? \"bg-green-500 animate-pulse\" : \"bg-gray-500\"}`} />\r\n          <span className=\"text-gray-600 dark:text-gray-400\">\r\n            {relayMode === \"auto\"\r\n              ? \"ESP32 controlling automatically\"\r\n              : \"Manual control mode\"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"p-4\">\r\n        {loading ? (\r\n          <div className=\"flex items-center justify-center py-8\">\r\n            <Loader2 className=\"w-6 h-6 animate-spin text-slate-600\" />\r\n            <span className=\"ml-2 text-sm text-gray-500\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-3\">\r\n            {DEVICES.map(device => {\r\n              const Icon = device.icon;\r\n              const isActive = relayStatus[device.key];\r\n              const isExpanded = expandedDevice === device.key;\r\n\r\n              return (\r\n                <div\r\n                  key={device.key}\r\n                  className={`\r\n                    p-3 rounded-lg border transition-all duration-200\r\n                    ${isActive\r\n                      ? \"border-green-200 bg-green-50 dark:bg-green-900/20 dark:border-green-700\"\r\n                      : \"border-gray-200 dark:border-slate-600 bg-gray-50 dark:bg-slate-700/50\"\r\n                    }\r\n                  `}\r\n                >\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <div className={`p-2 rounded-lg ${device.bgColor} ${device.color}`}>\r\n                        <Icon className=\"w-5 h-5\" />\r\n                      </div>\r\n                      <div>\r\n                        <h3 className=\"font-medium text-gray-800 dark:text-gray-200 text-sm\">\r\n                          {device.name}\r\n                        </h3>\r\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                          {device.description}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center gap-3\">\r\n                      {/* Status */}\r\n                      <div className=\"flex items-center gap-1\">\r\n                        {isActive ? (\r\n                          <CheckCircle className=\"w-4 h-4 text-green-600\" />\r\n                        ) : (\r\n                          <AlertCircle className=\"w-4 h-4 text-gray-400\" />\r\n                        )}\r\n                        <span className=\"text-xs font-medium\">\r\n                          {isActive ? \"ON\" : \"OFF\"}\r\n                        </span>\r\n                      </div>\r\n\r\n                      {/* Toggle Switch for Manual Mode */}\r\n                      {relayMode === \"manual\" && (\r\n                        <label className=\"relative inline-block w-11 h-6 cursor-pointer\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={isActive}\r\n                            onChange={() => toggleRelay(device.key)}\r\n                            className=\"sr-only peer\"\r\n                            aria-label={`Toggle ${device.name}`}\r\n                          />\r\n                          <div className={`\r\n                            w-11 h-6 rounded-full transition-colors duration-300 ease-in-out\r\n                            peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-opacity-20\r\n                            ${isActive\r\n                              ? \"bg-green-500 peer-focus:ring-green-300\"\r\n                              : \"bg-gray-300 dark:bg-gray-600 peer-focus:ring-gray-300\"\r\n                            }\r\n                          `}>\r\n                            <div className={`\r\n                              absolute top-0.5 left-0.5 w-5 h-5 bg-white rounded-full shadow-md\r\n                              transform transition-transform duration-300 ease-in-out\r\n                              ${isActive ? \"translate-x-5\" : \"translate-x-0\"}\r\n                            `} />\r\n                          </div>\r\n                        </label>\r\n                      )}\r\n\r\n                      {/* Expand Button for Auto Mode */}\r\n                      {relayMode === \"auto\" && device.periods > 0 && (\r\n                        <button\r\n                          onClick={() => setExpandedDevice(isExpanded ? null : device.key)}\r\n                          className=\"p-1 rounded-lg hover:bg-gray-200 dark:hover:bg-slate-600 transition-colors\"\r\n                        >\r\n                          <Clock className=\"w-4 h-4 text-indigo-600\" />\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Enhanced Schedule Settings */}\r\n                  {relayMode === \"auto\" && device.periods > 0 && isExpanded && (\r\n                    <div className=\"mt-4 p-4 bg-white dark:bg-slate-800 rounded-lg border border-gray-200 dark:border-slate-600\">\r\n                      {/* Preset Buttons */}\r\n                      {device.presets && (\r\n                        <div className=\"mb-4\">\r\n                          <div className=\"flex items-center gap-2 mb-2\">\r\n                            <RotateCcw className=\"w-4 h-4 text-indigo-600\" />\r\n                            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Quick Presets</span>\r\n                          </div>\r\n                          <div className=\"grid grid-cols-1 gap-2\">\r\n                            {device.presets.map((preset, index) => (\r\n                              <button\r\n                                key={index}\r\n                                onClick={() => applyPreset(device.key, preset)}\r\n                                className=\"p-2 text-xs bg-indigo-100 dark:bg-indigo-900/30 text-indigo-700 dark:text-indigo-300 rounded-lg hover:bg-indigo-200 dark:hover:bg-indigo-900/50 transition-colors text-left\"\r\n                              >\r\n                                <div className=\"font-medium\">{preset.name}</div>\r\n                                <div className=\"text-indigo-600 dark:text-indigo-400\">\r\n                                  {preset.periods.filter(p => p.start || p.end).map(p => `${p.start}-${p.end}`).join(', ')}\r\n                                </div>\r\n                              </button>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Time Controls */}\r\n                      <div className=\"flex items-center justify-between mb-3\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Timer className=\"w-4 h-4 text-indigo-600\" />\r\n                          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Schedule Settings</span>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => clearAllTimes(device.key)}\r\n                          className=\"text-xs text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300\"\r\n                        >\r\n                          Clear All\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-3\">\r\n                        {Array.from({ length: device.periods }, (_, i) => {\r\n                          const periodKey = `period${i + 1}`;\r\n                          const currentPeriod = relayTime?.[device.key]?.[periodKey];\r\n\r\n                          return (\r\n                            <div key={i} className=\"bg-gray-50 dark:bg-slate-700 rounded-lg p-3\">\r\n                              <div className=\"text-xs text-indigo-600 dark:text-indigo-400 mb-2 font-medium\">\r\n                                Period {i + 1}\r\n                              </div>\r\n\r\n                              {/* Start Time */}\r\n                              <div className=\"mb-3\">\r\n                                <label className=\"text-xs text-gray-600 dark:text-gray-400 mb-1 block\">Start Time</label>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input\r\n                                    type=\"time\"\r\n                                    className=\"text-sm px-3 py-2 rounded-lg border border-gray-300 dark:border-slate-500 bg-white dark:bg-slate-600 flex-1 focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\r\n                                    value={currentPeriod?.start || \"\"}\r\n                                    onChange={e => setPeriod(device.key, periodKey, \"start\", e.target.value)}\r\n                                  />\r\n                                  <button\r\n                                    onClick={() => {\r\n                                      const newTime = adjustTime(currentPeriod?.start || \"00:00\", -30);\r\n                                      setPeriod(device.key, periodKey, \"start\", newTime);\r\n                                    }}\r\n                                    className=\"p-2 bg-gray-200 dark:bg-slate-600 rounded-lg hover:bg-gray-300 dark:hover:bg-slate-500\"\r\n                                  >\r\n                                    <Minus className=\"w-3 h-3\" />\r\n                                  </button>\r\n                                  <button\r\n                                    onClick={() => {\r\n                                      const newTime = adjustTime(currentPeriod?.start || \"00:00\", 30);\r\n                                      setPeriod(device.key, periodKey, \"start\", newTime);\r\n                                    }}\r\n                                    className=\"p-2 bg-gray-200 dark:bg-slate-600 rounded-lg hover:bg-gray-300 dark:hover:bg-slate-500\"\r\n                                  >\r\n                                    <Plus className=\"w-3 h-3\" />\r\n                                  </button>\r\n                                </div>\r\n\r\n                                {/* Quick Time Buttons */}\r\n                                <div className=\"flex flex-wrap gap-1 mt-2\">\r\n                                  {QUICK_TIMES.map(time => (\r\n                                    <button\r\n                                      key={time.value}\r\n                                      onClick={() => setPeriod(device.key, periodKey, \"start\", time.value)}\r\n                                      className=\"px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded hover:bg-blue-200 dark:hover:bg-blue-900/50\"\r\n                                    >\r\n                                      {time.label}\r\n                                    </button>\r\n                                  ))}\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* End Time */}\r\n                              <div>\r\n                                <label className=\"text-xs text-gray-600 dark:text-gray-400 mb-1 block\">End Time</label>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input\r\n                                    type=\"time\"\r\n                                    className=\"text-sm px-3 py-2 rounded-lg border border-gray-300 dark:border-slate-500 bg-white dark:bg-slate-600 flex-1 focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\r\n                                    value={currentPeriod?.end || \"\"}\r\n                                    onChange={e => setPeriod(device.key, periodKey, \"end\", e.target.value)}\r\n                                  />\r\n                                  <button\r\n                                    onClick={() => {\r\n                                      const newTime = adjustTime(currentPeriod?.end || \"00:00\", -30);\r\n                                      setPeriod(device.key, periodKey, \"end\", newTime);\r\n                                    }}\r\n                                    className=\"p-2 bg-gray-200 dark:bg-slate-600 rounded-lg hover:bg-gray-300 dark:hover:bg-slate-500\"\r\n                                  >\r\n                                    <Minus className=\"w-3 h-3\" />\r\n                                  </button>\r\n                                  <button\r\n                                    onClick={() => {\r\n                                      const newTime = adjustTime(currentPeriod?.end || \"00:00\", 30);\r\n                                      setPeriod(device.key, periodKey, \"end\", newTime);\r\n                                    }}\r\n                                    className=\"p-2 bg-gray-200 dark:bg-slate-600 rounded-lg hover:bg-gray-300 dark:hover:bg-slate-500\"\r\n                                  >\r\n                                    <Plus className=\"w-3 h-3\" />\r\n                                  </button>\r\n                                </div>\r\n\r\n                                {/* Quick Time Buttons */}\r\n                                <div className=\"flex flex-wrap gap-1 mt-2\">\r\n                                  {QUICK_TIMES.map(time => (\r\n                                    <button\r\n                                      key={time.value}\r\n                                      onClick={() => setPeriod(device.key, periodKey, \"end\", time.value)}\r\n                                      className=\"px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded hover:bg-blue-200 dark:hover:bg-blue-900/50\"\r\n                                    >\r\n                                      {time.label}\r\n                                    </button>\r\n                                  ))}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n\r\n        {/* Footer */}\r\n        <div className=\"mt-4 pt-3 border-t border-gray-200 dark:border-slate-600\">\r\n          <div className=\"text-center text-xs text-gray-500 dark:text-gray-400\">\r\n            {relayMode === \"auto\"\r\n              ? \"ESP32 reads schedule and controls automatically\"\r\n              : \"Manual real-time control\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1114, "column": 0}, "map": {"version":3,"sources":["file:///D:/Dashboard/dashboard/src/app/%28dashboard%29/console/page.tsx"],"sourcesContent":["// src/app/(dashboard)/console/page.tsx\r\n\"use client\";\r\nimport RelayConsole from \"@/components/RelayConsole\";\r\n\r\nexport default function ConsolePage() {\r\n  return (\r\n    <div className=\"w-full\">\r\n      {/* Mobile: Stack vertically, Desktop: Horizontal */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4 sm:gap-6\">\r\n        <RelayConsole floor=\"floor1\" />\r\n        <RelayConsole floor=\"floor2\" />\r\n        <RelayConsole floor=\"floor3\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,uCAAuC;;;;;AAEvC;AADA;;;AAGe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBAEb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,kIAAA,CAAA,UAAY;oBAAC,OAAM;;;;;;8BACpB,8OAAC,kIAAA,CAAA,UAAY;oBAAC,OAAM;;;;;;8BACpB,8OAAC,kIAAA,CAAA,UAAY;oBAAC,OAAM;;;;;;;;;;;;;;;;;AAI5B","debugId":null}}]
}