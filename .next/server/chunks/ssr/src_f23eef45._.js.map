{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Dashboard/dashboard/src/components/ResultChart.tsx"],"sourcesContent":["// /src/components/ResultChart.tsx\r\n\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, CartesianGrid\r\n} from \"recharts\";\r\n\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n);\r\n\r\nconst SENSOR_CONFIG: Record<string, { label: string, unit: string, color: string }> = {\r\n  temp: { label: \"อุณหภูมิ\", unit: \"°C\", color: \"#ef4444\" },\r\n  humid: { label: \"ความชื้น\", unit: \"%\", color: \"#3b82f6\" },\r\n  wt: { label: \"อุณหภูมิน้ำ\", unit: \"°C\", color: \"#06b6d4\" },\r\n  ph: { label: \"pH\", unit: \"\", color: \"#8b5cf6\" },\r\n  ec: { label: \"EC\", unit: \"EC\", color: \"#10b981\" },\r\n  lux: { label: \"แสง\", unit: \"lux\", color: \"#f59e0b\" },\r\n};\r\n\r\ninterface SensorLog {\r\n  id: number;\r\n  floor: string;   // << ใช้ floor แทน tier\r\n  temp?: number;\r\n  humid?: number;\r\n  wt?: number;\r\n  ph?: number;\r\n  ec?: number;\r\n  lux?: number;\r\n  created_at: string;\r\n}\r\n\r\ninterface ChartRow {\r\n  time: string;\r\n  floor1?: number | null;\r\n  floor2?: number | null;\r\n  floor3?: number | null;\r\n}\r\n\r\nexport default function ResultChart({\r\n  sensorKey = \"ph\",  // default: ph\r\n  rangeHours = 24\r\n}: {\r\n  sensorKey?: keyof Omit<SensorLog, \"id\" | \"floor\" | \"created_at\">;\r\n  rangeHours?: number;\r\n}) {\r\n  const [data, setData] = useState<SensorLog[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const since = new Date(Date.now() - rangeHours * 60 * 60 * 1000).toISOString();\r\n      const { data: logs } = await supabase\r\n        .from(\"sensor_logs\")\r\n        .select(\"*\")\r\n        .gte(\"created_at\", since)\r\n        .order(\"created_at\", { ascending: true });\r\n      setData(logs || []);\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [sensorKey, rangeHours]);\r\n\r\n  // แปลงข้อมูลกลุ่มเวลา\r\n  const chartData: ChartRow[] = [];\r\n  if (data.length > 0) {\r\n    const group: Record<string, ChartRow> = {};\r\n    data.forEach(log => {\r\n      // ใช้เวลาแบบชั่วโมง:นาที\r\n      const t = new Date(log.created_at);\r\n      const hhmm = `${t.getHours().toString().padStart(2, \"0\")}:${t.getMinutes().toString().padStart(2, \"0\")}`;\r\n      if (!group[hhmm]) group[hhmm] = { time: hhmm };\r\n      // map เข้า floor\r\n      if ([\"floor1\", \"floor2\", \"floor3\"].includes(log.floor)) {\r\n        group[hhmm][log.floor as \"floor1\" | \"floor2\" | \"floor3\"] = log[sensorKey] ?? null;\r\n      }\r\n    });\r\n    Object.values(group).forEach(row => chartData.push(row));\r\n  }\r\n\r\n  if (loading) return <div className=\"h-72 flex items-center justify-center text-gray-500\">Loading...</div>;\r\n  if (chartData.length === 0) return <div className=\"h-72 flex items-center justify-center text-gray-400\">No data</div>;\r\n\r\n  const config = SENSOR_CONFIG[sensorKey as string];\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"font-semibold text-lg mb-2\">{config.label} ({config.unit})</h2>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <LineChart data={chartData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"time\" fontSize={12} />\r\n          <YAxis fontSize={12} />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"floor1\" stroke=\"#2563eb\" name=\"ชั้น 1\" dot={false} />\r\n          <Line type=\"monotone\" dataKey=\"floor2\" stroke=\"#22c55e\" name=\"ชั้น 2\" dot={false} />\r\n          <Line type=\"monotone\" dataKey=\"floor3\" stroke=\"#eab308\" name=\"ชั้น 3\" dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n      <div className=\"mt-2 text-xs text-gray-500\">ช่วง {rangeHours} ชั่วโมงล่าสุด</div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///D:/Dashboard/dashboard/src/app/%28dashboard%29/result/page.tsx"],"sourcesContent":["///src/app/(dashboard)/result/page.tsx\r\n\"use client\";\r\nimport { useState } from \"react\";\r\nimport ResultChart from \"@/components/ResultChart\";\r\nimport {\r\n  Thermometer,\r\n  Droplets,\r\n  Waves,\r\n  FlaskConical,\r\n  Sun,\r\n  Zap,\r\n  BarChart3,\r\n  Grid3X3,\r\n  List,\r\n  Layers\r\n} from \"lucide-react\";\r\n\r\nconst SENSORS = [\r\n  { key: \"ph\", label: \"pH\", icon: FlaskConical },\r\n  { key: \"ec\", label: \"EC\", icon: Zap },\r\n  { key: \"temp\", label: \"อุณหภูมิ\", icon: Thermometer },\r\n  { key: \"humid\", label: \"ความชื้น\", icon: Droplets },\r\n  { key: \"wt\", label: \"อุณหภูมิน้ำ\", icon: Waves },\r\n  { key: \"lux\", label: \"แสง\", icon: Sun },\r\n] as const;\r\n\r\nconst VIEW_MODES = [\r\n  { key: \"single\", label: \"Single\", icon: BarChart3 },\r\n  { key: \"grid\", label: \"Grid\", icon: Grid3X3 },\r\n  { key: \"list\", label: \"List\", icon: List },\r\n  { key: \"compare\", label: \"Compare\", icon: Layers },\r\n] as const;\r\n\r\ninterface SingleViewProps {\r\n  sensor: (typeof SENSORS)[number][\"key\"];\r\n  currentSensor: (typeof SENSORS)[number] | undefined;\r\n  CurrentIcon: React.ComponentType<{ className?: string }>;\r\n}\r\n\r\nexport default function ResultPage() {\r\n  const [sensor, setSensor] = useState<(typeof SENSORS)[number][\"key\"]>(\"ph\");\r\n  const [viewMode, setViewMode] = useState<(typeof VIEW_MODES)[number][\"key\"]>(\"single\");\r\n\r\n  const currentSensor = SENSORS.find(s => s.key === sensor);\r\n  const CurrentIcon = currentSensor?.icon || BarChart3;\r\n\r\n  return (\r\n    <div className=\"w-full max-w-7xl mx-auto p-6 space-y-6\">\r\n      {/* Controls */}\r\n      <div className=\"flex flex-col sm:flex-row gap-4 items-center justify-between\">\r\n        {/* View Mode Toggle */}\r\n        <div className=\"flex items-center gap-2 bg-gray-100 dark:bg-slate-800 rounded-xl p-1\">\r\n          {VIEW_MODES.map((mode) => {\r\n            const Icon = mode.icon;\r\n            return (\r\n              <button\r\n                key={mode.key}\r\n                onClick={() => setViewMode(mode.key)}\r\n                className={`\r\n                  flex items-center gap-2 px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200\r\n                  ${viewMode === mode.key\r\n                    ? \"bg-white dark:bg-slate-700 text-gray-900 dark:text-white shadow-sm\"\r\n                    : \"text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white\"\r\n                  }\r\n                `}\r\n              >\r\n                <Icon className=\"w-4 h-4\" />\r\n                {mode.label}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* Sensor Selector (for single view) */}\r\n        {viewMode === \"single\" && (\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {SENSORS.map((s) => {\r\n              const Icon = s.icon;\r\n              const isActive = sensor === s.key;\r\n              return (\r\n                <button\r\n                  key={s.key}\r\n                  onClick={() => setSensor(s.key)}\r\n                  className={`\r\n                    flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200\r\n                    ${isActive\r\n                      ? \"bg-gray-900 dark:bg-white text-white dark:text-gray-900\"\r\n                      : \"bg-white dark:bg-slate-800 text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-slate-700 border border-gray-200 dark:border-slate-600\"\r\n                    }\r\n                  `}\r\n                >\r\n                  <Icon className=\"w-4 h-4\" />\r\n                  {s.label}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Content based on view mode */}\r\n      {viewMode === \"single\" && (\r\n        <SingleView sensor={sensor} currentSensor={currentSensor} CurrentIcon={CurrentIcon} />\r\n      )}\r\n\r\n      {viewMode === \"grid\" && (\r\n        <GridView />\r\n      )}\r\n\r\n      {viewMode === \"list\" && (\r\n        <ListView />\r\n      )}\r\n\r\n      {viewMode === \"compare\" && (\r\n        <CompareView />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Single Chart View\r\nfunction SingleView({ sensor, currentSensor, CurrentIcon }: SingleViewProps) {\r\n  return (\r\n    <div className=\"bg-white dark:bg-slate-900 rounded-2xl shadow-sm border border-gray-100 dark:border-slate-700 overflow-hidden\">\r\n      <div className=\"px-6 py-4 border-b border-gray-100 dark:border-slate-700\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <div className=\"p-2 bg-gray-50 dark:bg-slate-800 rounded-lg\">\r\n            <CurrentIcon className=\"w-5 h-5 text-gray-600 dark:text-gray-400\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              {currentSensor?.label}\r\n            </h2>\r\n            <p className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n              เปรียบเทียบข้อมูล 3 ชั้น\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-6\">\r\n        <ResultChart sensorKey={sensor} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Grid View - All sensors in grid\r\nfunction GridView() {\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n      {SENSORS.map((sensor) => {\r\n        const Icon = sensor.icon;\r\n        return (\r\n          <div\r\n            key={sensor.key}\r\n            className=\"bg-white dark:bg-slate-900 rounded-xl shadow-sm border border-gray-100 dark:border-slate-700 overflow-hidden\"\r\n          >\r\n            <div className=\"px-4 py-3 border-b border-gray-100 dark:border-slate-700\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Icon className=\"w-4 h-4 text-gray-600 dark:text-gray-400\" />\r\n                <h3 className=\"font-medium text-gray-900 dark:text-white text-sm\">\r\n                  {sensor.label}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-4\">\r\n              <div className=\"h-48\">\r\n                <ResultChart sensorKey={sensor.key} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\n// List View - Vertical stack\r\nfunction ListView() {\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {SENSORS.map((sensor) => {\r\n        const Icon = sensor.icon;\r\n        return (\r\n          <div\r\n            key={sensor.key}\r\n            className=\"bg-white dark:bg-slate-900 rounded-xl shadow-sm border border-gray-100 dark:border-slate-700 overflow-hidden\"\r\n          >\r\n            <div className=\"px-6 py-4 border-b border-gray-100 dark:border-slate-700\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"p-2 bg-gray-50 dark:bg-slate-800 rounded-lg\">\r\n                  <Icon className=\"w-5 h-5 text-gray-600 dark:text-gray-400\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                    {sensor.label}\r\n                  </h3>\r\n                  <p className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n                    Real-time monitoring\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <div className=\"h-64\">\r\n                <ResultChart sensorKey={sensor.key} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Compare View - Side by side comparison\r\nfunction CompareView() {\r\n  const [selectedSensors, setSelectedSensors] = useState<(typeof SENSORS)[number][\"key\"][]>([\"ph\", \"temp\"]);\r\n\r\n  const toggleSensor = (sensorKey: (typeof SENSORS)[number][\"key\"]) => {\r\n    setSelectedSensors(prev => {\r\n      if (prev.includes(sensorKey)) {\r\n        return prev.filter(s => s !== sensorKey);\r\n      } else if (prev.length < 4) {\r\n        return [...prev, sensorKey];\r\n      }\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Sensor Selection */}\r\n      <div className=\"bg-gray-50 dark:bg-slate-800 rounded-xl p-4\">\r\n        <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-3\">\r\n          เลือกเซ็นเซอร์เพื่อเปรียบเทียบ (สูงสุด 4 อัน)\r\n        </h3>\r\n        <div className=\"flex flex-wrap gap-2\">\r\n          {SENSORS.map((sensor) => {\r\n            const Icon = sensor.icon;\r\n            const isSelected = selectedSensors.includes(sensor.key);\r\n            return (\r\n              <button\r\n                key={sensor.key}\r\n                onClick={() => toggleSensor(sensor.key)}\r\n                className={`\r\n                  flex items-center gap-2 px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200\r\n                  ${isSelected\r\n                    ? \"bg-gray-900 dark:bg-white text-white dark:text-gray-900\"\r\n                    : \"bg-white dark:bg-slate-700 text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-slate-600\"\r\n                  }\r\n                `}\r\n              >\r\n                <Icon className=\"w-4 h-4\" />\r\n                {sensor.label}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Comparison Charts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {selectedSensors.map((sensorKey) => {\r\n          const sensor = SENSORS.find(s => s.key === sensorKey);\r\n          const Icon = sensor?.icon || BarChart3;\r\n          return (\r\n            <div\r\n              key={sensorKey}\r\n              className=\"bg-white dark:bg-slate-900 rounded-xl shadow-sm border border-gray-100 dark:border-slate-700 overflow-hidden\"\r\n            >\r\n              <div className=\"px-4 py-3 border-b border-gray-100 dark:border-slate-700\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Icon className=\"w-4 h-4 text-gray-600 dark:text-gray-400\" />\r\n                  <h3 className=\"font-medium text-gray-900 dark:text-white\">\r\n                    {sensor?.label}\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"p-4\">\r\n                <div className=\"h-56\">\r\n                  <ResultChart sensorKey={sensorKey} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}