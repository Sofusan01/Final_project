{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Dashboard/dashboard/src/lib/firebase.ts"],"sourcesContent":["// /lib/firebase.ts\r\nimport { initializeApp, getApps } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDRn8HHi_a4SAgFDAOvm0-ks_IGVfhCEZ0\",\r\n  authDomain: \"dashboard-4de68.firebaseapp.com\",\r\n  databaseURL: \"https://dashboard-4de68-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"dashboard-4de68\",\r\n  storageBucket: \"dashboard-4de68.firebasestorage.app\",\r\n  messagingSenderId: \"759947044425\",\r\n  appId: \"1:759947044425:web:6db0a728a2b831d26f8198\",\r\n  measurementId: \"G-RRNL8VHNL4\"\r\n};\r\n\r\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApps()[0];\r\nexport const db = getDatabase(app);\r\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;AACnB;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,aAAa;IACb,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,MAAM,MAAM,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AACrE,MAAM,KAAK,CAAA,GAAA,qKAAA,CAAA,cAAW,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///D:/Dashboard/dashboard/src/components/FloorSensorCard.tsx"],"sourcesContent":["// src/components/FloorSensorCard.tsx\r\n\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { onValue, ref } from \"firebase/database\";\r\nimport { db } from \"@/lib/firebase\";\r\nimport { Gauge } from '@mui/x-charts/Gauge';\r\nimport { Thermometer, Droplets, Waves, FlaskConical, Sun, Zap } from \"lucide-react\";\r\n\r\nconst SENSOR_CONFIG: Record<string, {\r\n  label: string;\r\n  icon: React.ComponentType<{ className?: string }>;\r\n  unit: string;\r\n  color: string;\r\n  min: number;\r\n  max: number;\r\n  optimal?: { min: number; max: number };\r\n  gaugeColor: string;\r\n  gaugeOptimalColor: string;\r\n}> = {\r\n  temp: {\r\n    label: \"Temperature\",\r\n    icon: Thermometer,\r\n    unit: \"°C\",\r\n    color: \"text-red-600 dark:text-red-300\",\r\n    min: 0,\r\n    max: 40,\r\n    optimal: { min: 20, max: 30 },\r\n    gaugeColor: \"#ef4444\",\r\n    gaugeOptimalColor: \"#10b981\"\r\n  },\r\n  humid: {\r\n    label: \"Humidity\",\r\n    icon: Droplets,\r\n    unit: \"%\",\r\n    color: \"text-blue-600 dark:text-blue-300\",\r\n    min: 0,\r\n    max: 100,\r\n    optimal: { min: 40, max: 70 },\r\n    gaugeColor: \"#3b82f6\",\r\n    gaugeOptimalColor: \"#06b6d4\"\r\n  },\r\n  wt: {\r\n    label: \"Water Temperature\",\r\n    icon: Waves,\r\n    unit: \"°C\",\r\n    color: \"text-cyan-600 dark:text-cyan-300\",\r\n    min: 0,\r\n    max: 40,\r\n    optimal: { min: 18, max: 25 },\r\n    gaugeColor: \"#06b6d4\",\r\n    gaugeOptimalColor: \"#10b981\"\r\n  },\r\n  ph: {\r\n    label: \"pH Level\",\r\n    icon: FlaskConical,\r\n    unit: \"\",\r\n    color: \"text-purple-600 dark:text-purple-300\",\r\n    min: 0,\r\n    max: 14,\r\n    optimal: { min: 5.5, max: 7.5 },\r\n    gaugeColor: \"#8b5cf6\",\r\n    gaugeOptimalColor: \"#a855f7\"\r\n  },\r\n  lux: {\r\n    label: \"Light Intensity\",\r\n    icon: Sun,\r\n    unit: \"lux\",\r\n    color: \"text-amber-600 dark:text-amber-300\",\r\n    min: 0,\r\n    max: 100000,\r\n    optimal: { min: 0, max: 50000 },\r\n    gaugeColor: \"#f59e0b\",\r\n    gaugeOptimalColor: \"#eab308\"\r\n  },\r\n  ec: {\r\n    label: \"Conductivity\",\r\n    icon: Zap,\r\n    unit: \"mS/cm\",\r\n    color: \"text-emerald-600 dark:text-emerald-300\",\r\n    min: 0,\r\n    max: 3000,\r\n    optimal: { min: 0, max: 3000 },\r\n    gaugeColor: \"#10b981\",\r\n    gaugeOptimalColor: \"#059669\"\r\n  },\r\n};\r\n\r\nfunction formatValue(value: number, key: string): string {\r\n  if (key === 'lux' && value >= 1000) {\r\n    return `${(value / 1000).toFixed(1)}k`;\r\n  }\r\n  if (typeof value === 'number') {\r\n    return value % 1 === 0 ? value.toString() : value.toFixed(1);\r\n  }\r\n  return String(value);\r\n}\r\n\r\nexport function FloorSensorCard({ floor }: { floor: string }) {\r\n  const [sensor, setSensor] = useState<Record<string, number | string> | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const sensorRef = ref(db, `${floor}/sensor`);\r\n    const unsubscribe = onValue(sensorRef, snap => {\r\n      const val = snap.val() || {};\r\n      Object.keys(val).forEach((k) => {\r\n        if (!val[k] && val[k] !== 0) delete val[k];\r\n      });\r\n      setSensor(val);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [floor]);\r\n\r\n  const sensorEntries = sensor ? Object.entries(sensor) : [];\r\n  const hasData = sensorEntries.length > 0;\r\n\r\n  return (\r\n    <div className=\"w-full bg-white dark:bg-gray-900 rounded-2xl shadow-xl border-2 border-gray-200 dark:border-gray-700 overflow-hidden\">\r\n      {/* Header */}\r\n      <div className=\"bg-gradient-to-r from-gray-800 to-gray-900 dark:from-gray-900 dark:to-black p-4 sm:p-6 text-white\">\r\n        <div className=\"flex items-center justify-center\">\r\n          <div>\r\n            <h3 className=\"text-xl sm:text-2xl font-bold tracking-wide text-center text-white\">\r\n              {floor.toUpperCase()}\r\n            </h3>\r\n            <p className=\"text-gray-200 dark:text-gray-300 text-sm sm:text-base text-center mt-1\">\r\n              Plant Monitoring System\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"p-4 sm:p-6 bg-gradient-to-br from-slate-50 to-gray-100 dark:from-slate-800 dark:to-gray-900\">\r\n        {isLoading ? (\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 sm:h-10 sm:w-10 border-b-4 border-blue-600\"></div>\r\n            <span className=\"ml-4 text-gray-800 dark:text-gray-200 text-base sm:text-lg font-bold\">Loading...</span>\r\n          </div>\r\n        ) : !hasData ? (\r\n          <div className=\"flex flex-col items-center justify-center py-12 text-gray-700 dark:text-gray-300\">\r\n            <span className=\"text-lg sm:text-xl font-bold\">No Data Available</span>\r\n            <span className=\"text-sm sm:text-base mt-2 font-medium\">All sensors are offline</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex flex-row flex-wrap gap-6 justify-between\">\r\n            {sensorEntries.map(([key, value]) => {\r\n              const config = SENSOR_CONFIG[key];\r\n              const numValue = Number(value);\r\n\r\n              if (!config) return null;\r\n\r\n              const Icon = config.icon;\r\n              const isOptimal = config.optimal &&\r\n                numValue >= config.optimal.min &&\r\n                numValue <= config.optimal.max;\r\n\r\n              const gaugeColor = isOptimal ? config.gaugeOptimalColor : config.gaugeColor;\r\n\r\n              return (\r\n                <div\r\n                  key={key}\r\n                  className=\"bg-gradient-to-br from-white/90 to-gray-50/90 dark:from-gray-800/90 dark:to-gray-900/90 backdrop-blur-sm rounded-xl p-3 sm:p-4 border-2 border-gray-200/50 dark:border-gray-700/50 transition-all duration-300 hover:shadow-xl hover:scale-105 hover:border-blue-300 dark:hover:border-blue-600 hover:bg-white/95 dark:hover:bg-gray-800/95 flex-1 min-w-[200px]\"\r\n                >\r\n                  {/* Sensor Header */}\r\n                  <div className=\"flex flex-col items-center text-center mb-3 sm:mb-4 space-y-2 min-h-[80px] sm:min-h-[90px] px-1\">\r\n                    <div className={`p-2 sm:p-3 rounded-xl bg-gradient-to-br from-white to-gray-100 dark:from-gray-700 dark:to-gray-800 shadow-lg border border-gray-200 dark:border-gray-600 ${config.color} flex-shrink-0`}>\r\n                      <Icon className=\"w-4 h-4 sm:w-5 sm:h-5 lg:w-6 lg:h-6 drop-shadow-sm\" />\r\n                    </div>\r\n\r\n                    {/* Sensor Name */}\r\n                    <h4 className=\"font-semibold text-gray-900 dark:text-white text-xs sm:text-sm leading-tight min-h-[28px] sm:min-h-[32px] flex items-center justify-center text-center px-1 max-w-full\">\r\n                      <span className=\"truncate\">\r\n                        {config.label}\r\n                      </span>\r\n                    </h4>\r\n\r\n                    {/* Value and Unit */}\r\n                    <div className=\"flex items-baseline justify-center gap-1 max-w-full overflow-hidden\">\r\n                      <span className={`text-base sm:text-lg lg:text-xl font-bold ${config.color} truncate max-w-[80px] sm:max-w-[100px]`}>\r\n                        {formatValue(numValue, key)}\r\n                      </span>\r\n                      {config.unit && (\r\n                        <span className=\"text-xs sm:text-sm font-medium text-gray-600 dark:text-gray-400 flex-shrink-0\">\r\n                          {config.unit}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* MUI Gauge */}\r\n                  <div className=\"h-24 sm:h-28 lg:h-32 flex items-end justify-center\">\r\n                    <Gauge\r\n                      value={numValue}\r\n                      valueMin={config.min}\r\n                      valueMax={config.max}\r\n                      startAngle={-90}\r\n                      endAngle={90}\r\n                      innerRadius=\"70%\"\r\n                      outerRadius=\"100%\"\r\n                      text=\"\"\r\n                      sx={{\r\n                        [`& .MuiGauge-valueArc`]: {\r\n                          fill: gaugeColor,\r\n                          strokeWidth: 8,\r\n                          filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))',\r\n                        },\r\n                        [`& .MuiGauge-referenceArc`]: {\r\n                          fill: '#e5e7eb',\r\n                          strokeWidth: 8,\r\n                        },\r\n                      }}\r\n                      width={window.innerWidth < 640 ? 100 : window.innerWidth < 1024 ? 120 : 140}\r\n                      height={window.innerWidth < 640 ? 60 : window.innerWidth < 1024 ? 70 : 80}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Status Indicator */}\r\n                  <div className=\"flex justify-center mt-2\">\r\n                    <div\r\n                      className=\"w-2 h-2 sm:w-3 sm:h-3 rounded-full shadow-sm\"\r\n                      style={{ backgroundColor: gaugeColor }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,qCAAqC;;;;;AAErC;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AALA;;;;;;AAOA,MAAM,gBAUD;IACH,MAAM;QACJ,OAAO;QACP,MAAM,mNAAA,CAAA,cAAW;QACjB,MAAM;QACN,OAAO;QACP,KAAK;QACL,KAAK;QACL,SAAS;YAAE,KAAK;YAAI,KAAK;QAAG;QAC5B,YAAY;QACZ,mBAAmB;IACrB;IACA,OAAO;QACL,OAAO;QACP,MAAM,6MAAA,CAAA,WAAQ;QACd,MAAM;QACN,OAAO;QACP,KAAK;QACL,KAAK;QACL,SAAS;YAAE,KAAK;YAAI,KAAK;QAAG;QAC5B,YAAY;QACZ,mBAAmB;IACrB;IACA,IAAI;QACF,OAAO;QACP,MAAM,uMAAA,CAAA,QAAK;QACX,MAAM;QACN,OAAO;QACP,KAAK;QACL,KAAK;QACL,SAAS;YAAE,KAAK;YAAI,KAAK;QAAG;QAC5B,YAAY;QACZ,mBAAmB;IACrB;IACA,IAAI;QACF,OAAO;QACP,MAAM,yNAAA,CAAA,eAAY;QAClB,MAAM;QACN,OAAO;QACP,KAAK;QACL,KAAK;QACL,SAAS;YAAE,KAAK;YAAK,KAAK;QAAI;QAC9B,YAAY;QACZ,mBAAmB;IACrB;IACA,KAAK;QACH,OAAO;QACP,MAAM,mMAAA,CAAA,MAAG;QACT,MAAM;QACN,OAAO;QACP,KAAK;QACL,KAAK;QACL,SAAS;YAAE,KAAK;YAAG,KAAK;QAAM;QAC9B,YAAY;QACZ,mBAAmB;IACrB;IACA,IAAI;QACF,OAAO;QACP,MAAM,mMAAA,CAAA,MAAG;QACT,MAAM;QACN,OAAO;QACP,KAAK;QACL,KAAK;QACL,SAAS;YAAE,KAAK;YAAG,KAAK;QAAK;QAC7B,YAAY;QACZ,mBAAmB;IACrB;AACF;AAEA,SAAS,YAAY,KAAa,EAAE,GAAW;IAC7C,IAAI,QAAQ,SAAS,SAAS,MAAM;QAClC,OAAO,GAAG,CAAC,QAAQ,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;IACxC;IACA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO,QAAQ,MAAM,IAAI,MAAM,QAAQ,KAAK,MAAM,OAAO,CAAC;IAC5D;IACA,OAAO,OAAO;AAChB;AAEO,SAAS,gBAAgB,EAAE,KAAK,EAAqB;;IAC1D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA0C;IAC7E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM,YAAY,CAAA,GAAA,qKAAA,CAAA,MAAG,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,GAAG,MAAM,OAAO,CAAC;YAC3C,MAAM,cAAc,CAAA,GAAA,qKAAA,CAAA,UAAO,AAAD,EAAE;yDAAW,CAAA;oBACrC,MAAM,MAAM,KAAK,GAAG,MAAM,CAAC;oBAC3B,OAAO,IAAI,CAAC,KAAK,OAAO;iEAAC,CAAC;4BACxB,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,OAAO,GAAG,CAAC,EAAE;wBAC5C;;oBACA,UAAU;oBACV,aAAa;gBACf;;YAEA;6CAAO,IAAM;;QACf;oCAAG;QAAC;KAAM;IAEV,MAAM,gBAAgB,SAAS,OAAO,OAAO,CAAC,UAAU,EAAE;IAC1D,MAAM,UAAU,cAAc,MAAM,GAAG;IAEvC,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CACX,MAAM,WAAW;;;;;;0CAEpB,6LAAC;gCAAE,WAAU;0CAAyE;;;;;;;;;;;;;;;;;;;;;;0BAQ5F,6LAAC;gBAAI,WAAU;0BACZ,0BACC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;;;;;sCACf,6LAAC;4BAAK,WAAU;sCAAuE;;;;;;;;;;;2BAEvF,CAAC,wBACH,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAK,WAAU;sCAA+B;;;;;;sCAC/C,6LAAC;4BAAK,WAAU;sCAAwC;;;;;;;;;;;yCAG1D,6LAAC;oBAAI,WAAU;8BACZ,cAAc,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM;wBAC9B,MAAM,SAAS,aAAa,CAAC,IAAI;wBACjC,MAAM,WAAW,OAAO;wBAExB,IAAI,CAAC,QAAQ,OAAO;wBAEpB,MAAM,OAAO,OAAO,IAAI;wBACxB,MAAM,YAAY,OAAO,OAAO,IAC9B,YAAY,OAAO,OAAO,CAAC,GAAG,IAC9B,YAAY,OAAO,OAAO,CAAC,GAAG;wBAEhC,MAAM,aAAa,YAAY,OAAO,iBAAiB,GAAG,OAAO,UAAU;wBAE3E,qBACE,6LAAC;4BAEC,WAAU;;8CAGV,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAW,CAAC,yJAAyJ,EAAE,OAAO,KAAK,CAAC,cAAc,CAAC;sDACtM,cAAA,6LAAC;gDAAK,WAAU;;;;;;;;;;;sDAIlB,6LAAC;4CAAG,WAAU;sDACZ,cAAA,6LAAC;gDAAK,WAAU;0DACb,OAAO,KAAK;;;;;;;;;;;sDAKjB,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAK,WAAW,CAAC,0CAA0C,EAAE,OAAO,KAAK,CAAC,uCAAuC,CAAC;8DAChH,YAAY,UAAU;;;;;;gDAExB,OAAO,IAAI,kBACV,6LAAC;oDAAK,WAAU;8DACb,OAAO,IAAI;;;;;;;;;;;;;;;;;;8CAOpB,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,gKAAA,CAAA,QAAK;wCACJ,OAAO;wCACP,UAAU,OAAO,GAAG;wCACpB,UAAU,OAAO,GAAG;wCACpB,YAAY,CAAC;wCACb,UAAU;wCACV,aAAY;wCACZ,aAAY;wCACZ,MAAK;wCACL,IAAI;4CACF,CAAC,CAAC,oBAAoB,CAAC,CAAC,EAAE;gDACxB,MAAM;gDACN,aAAa;gDACb,QAAQ;4CACV;4CACA,CAAC,CAAC,wBAAwB,CAAC,CAAC,EAAE;gDAC5B,MAAM;gDACN,aAAa;4CACf;wCACF;wCACA,OAAO,OAAO,UAAU,GAAG,MAAM,MAAM,OAAO,UAAU,GAAG,OAAO,MAAM;wCACxE,QAAQ,OAAO,UAAU,GAAG,MAAM,KAAK,OAAO,UAAU,GAAG,OAAO,KAAK;;;;;;;;;;;8CAK3E,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCACC,WAAU;wCACV,OAAO;4CAAE,iBAAiB;wCAAW;;;;;;;;;;;;2BA5DpC;;;;;oBAiEX;;;;;;;;;;;;;;;;;AAMZ;GAzIgB;KAAA","debugId":null}}]
}